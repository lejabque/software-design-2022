// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"
	time "time"

	mock "github.com/stretchr/testify/mock"

	vkapi "github.com/lejabque/software-design-2022/api_mocks/internal/vkapi"
)

// VkClient is an autogenerated mock type for the vkClient type
type VkClient struct {
	mock.Mock
}

// SearchPosts provides a mock function with given fields: ctx, queryText, startTime, endTime, startFrom, count
func (_m *VkClient) SearchPosts(ctx context.Context, queryText string, startTime time.Time, endTime time.Time, startFrom string, count int) (vkapi.PostsResponse, error) {
	ret := _m.Called(ctx, queryText, startTime, endTime, startFrom, count)

	var r0 vkapi.PostsResponse
	if rf, ok := ret.Get(0).(func(context.Context, string, time.Time, time.Time, string, int) vkapi.PostsResponse); ok {
		r0 = rf(ctx, queryText, startTime, endTime, startFrom, count)
	} else {
		r0 = ret.Get(0).(vkapi.PostsResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, time.Time, time.Time, string, int) error); ok {
		r1 = rf(ctx, queryText, startTime, endTime, startFrom, count)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewVkClient interface {
	mock.TestingT
	Cleanup(func())
}

// NewVkClient creates a new instance of VkClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewVkClient(t mockConstructorTestingTNewVkClient) *VkClient {
	mock := &VkClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
